
// Intended as pseudocode. Details such as type conversions, signing transactions, etc. are deliberately left out
//
// MIT License - see file LICENSE

hive = get_hive_api()
exchange = get_external_exchange_api();
stabilizer_account = “hbdstabilizer”
dao_account = “hive.fund”

while true
    a = hive.get_account(stabilizer_account)
    hive_bal = a.balance
    hive_chunk = min(hive_bal,max(100,hivebal*0.1))
    hbd_bal = a.hbd_balance
    print_rate = hive.get_dynamic_global_properties().hbd_print_rate
    order_book = hive.get_order_book(1)
    best_offer = order_book.asks[0]
    best_bid = order_book.bids[0]
    reward_hbd = a.reward_hbd_balance
    reward_hive = a.reward_hive_balance
    reward_vests = a.reward_vesting_balance
    market_price = hive_bal > 0.1 or hdb_bal > 0.1 ? exchange.get_price(“HIVE”) : 0

    if random_integer(25) > 0
      // do nothing
    else if (best_offer-best_bid)/(best_offer+best_bid) > 0.01)
      // wide market spread, wait for better
    else if hbd_bal >= 100
        if market_price < 1.005*best_offer.real_price
            if print_rate == 10000 and market_price < 1.00*best_offer.real_price
               hive.convert_hbd(stabilizer_account,hbd_bal)
            else
               hive.transfer(stabilizer_account,dao_account,hbd_bal,””)
        else
            hive.create_order(stabilizer_account,hbd_bal+" HBD",floor(hbd_bal*1000*best_offer.base/best_offer.quote)/1000+" HIVE",false,3)
    else if hive_chunk >= 100
        if print_rate < 10000 or market_price > best_bid.real_price
            if market_price > 1.06*best_bid.real_price
                hive.convert_hive_collaterized(stabilizer_account,hive_chunk)
            else
                hive.transfer(stabilizer_account,dao_account,hive_chunk,””)
        else
            hive.create_order(stabilizer_account,hive_chunk+" HIVE",floor(hive_chunk*1000*best_bid.base/best_bid.quote)/1000+" HBD",false,3)
    else if reward_hbd > 0.1 or reward_hive > 0.1 or reward_vests > 200
        hive.claim_reward_balance(stabilizer_account,reward_hive,reward_hbd,reward_vests)
    else if (a.vesting_withdraw_rate == 0 and a.vesting_shares > 200
        hive.withdraw_vesting(stabilizer_account,a.vesting_shares)
    sleep("3 seconds")
